*** 正则表达式
listeral  匹配文本字符串的字面值---foo
re1|re2   匹配正则表达式re1或re2---foo|bar
.         匹配任何字符（除\n之外）---b.b
^         匹配字符串起始部分---^Dear
$         匹配字符串终止部分---/bin/*sh$
*         匹配0次或多次前面出现的正则表达式---[A-Za-z0-9]*
+         匹配1次或多次前面出现的正则表达式---[a-z]+\.com
？        匹配0次或1次前面出现的正则表达式---goo?
{N}       匹配N次前面出现的正则表达式---[0-9]{3}
{M,N}     匹配M~N前面出现的正则表达式---[0-9]{5,9}
[...]     匹配来自字符集的任意单一字符---[aeiou]
[..x-y..] 匹配x-y范围中的任意单一字符---[0-9],[A-Za-z0-9]
[^...]    不匹配字符集中出现的任何一个字符，包括某一范围的字符（如果在此字符中出现）---[^aeiou],[^A-Za-z0-9]
（*|+|？|{}）？ 用于匹配上面频繁出现/重复出现符号的非贪婪版本（* + ? {}）---.*?[a-z]
(...)     匹配封闭的正则表达式，然后另存为子组---([0-9]{3})?,f(oo|u)bar
\d        匹配任何十进制的数字，与[0-9]一致，（\D与\d相反，不匹配任何非数值型的数字）
\w        匹配任何数字字母字符，与[A-Za-z0-9]相同（\W与之相反）
\s        匹配任何空格字符，与[\n\t\r\v\f]相同，（\s与之相反）
\b        匹配任何单词边界，（\B与之相反）
\N        匹配已保存的子组N
\A(\Z)    匹配字符串的起始
***   扩展表示法
（？iLmsux） 在正则表达式中嵌入一个或者多个特殊“标记”的参数（或者通过函数/方法）
** 使用择一匹配符
  表示一个“从多个模式中选择其中一”的模式，它用于分割不同的正则表达式
** 匹配任意单个字符
  点号或者句号（.）符号匹配除了换行符\n以外的任何字符，（python正则表达式有一个编译标记[s或者DOTALL]，该标记能够推翻这个限制，是点号能够匹配换行符）。
  无论字母、数字、空格（不包括“\n”换行符）、可打印字符、不可打印字符，还是一个符号，使用点号都可以匹配它们。
 
 f.o   匹配在字母“f”和“o”之间的任意一个字符，例如：fao、f9o、f#o等
 ..    任意两字符
 .end  匹配在字符串end之前的任意一个字符
 
