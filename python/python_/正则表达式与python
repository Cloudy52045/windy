re模块：核心函数与方法
————    正则表达式(regex object)对象和正则匹配对象(regex match object)
——    match()和search()以及compile()函数
————    仅仅是re模块函数
compile(pattern,flags=0)          使用任何可选的标记来编译正则表达式的模式，然后返回一个正则表达式对象
————    re模块函数和正则表达式对象的方法
match(pattern,string,flags=0)     尝试使用带有可选的标记的正则表达式来匹配字符串，如果匹配成功，就返回匹配对象，如果匹配失败，就返回None
seartch(pattern,string,flags=0)   使用可选标记搜索字符串中第一次出现的正则表达式模式，如果匹配成功，就返回匹配对象，如果匹配失败，就返回None
findall(pattern,string[,flags])   查找字符串中所有的（非重复）出现的正则表达式模式，并返回一个匹配列表
filditer(pattern,string[,flags])  与findall()函数相同，但返回的不是一个列表，而是一个迭代器，对于每一次匹配，迭代器都返回一个匹配对象
split(pattern,string,max=0)       根据正则表达式的模式分隔符，split函数将字符串分割为列表，然后返回成功匹配的列表，分割最多操作max次（默认分割所有匹配成功的位置）
————    re模块函数和正则表达式对象方法
sub(pattern,syring,count=0)       使用reql替换所有正则表达式的模式在字符串中出现的位置，除非定义count，否则就将替换所有出现的位置，（另见subn()函数，该函数返回替换操作的数目）
purge()                           清除隐式编译的正则表达式
————    常用的匹配对象方法
group(num=0)                      返回整个匹配对象，或者编号为num的特定子组
groups(default=None)              返回一个包含所有匹配子组的元组（如果没有成功匹配，则返回一个空元组）
groupdict(default=None)           返回一个包含所有匹配的命名子组的字典，所有的子组名称作为字典的键（如果没有匹配，就返回一空字典）
————    常用的模块属性
re.I、re.IGNORECASE       不区分大小写的匹配
re.L、re.LOCALE           根据所使用的本地语言环境通过\w、\W、\b、\B、\s、\S实现匹配

